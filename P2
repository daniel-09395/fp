# Practical-2: Double Parity
print("Daniel - 11")

def add_par(data):
    for row in data:
        row.append(row.count(1)%2)

        column_parity=[sum(column)%2 for column in zip(*data)]
        data.append(column_parity)
        return data

def check_parity(data):
    row_parity = [row[-1] for row in data[:-1]]
    calculated_row_par = [row.count(1)%2 for row in data[:-1]]
    
    column_parity = [data[-1]]
    calculated_column_par = [column.count(1)%2 for column in data[:-1]]

    row_error = [i for i,(actual, calculated) in enumerate
             (zip (row_parity, calculated_row_par)) if actual != calculated]

    column_error = [i for i,(actual, calculated) in enumerate
             (zip (column_parity, calculated_column_par)) if actual != calculated]
    return row_error,column_error

data = [[1,0,1,0,1],[0,1,0,1,0]]
data_par = add_par(data)

print("DATA WITH PARITY BITS:")

for row in data_par:
    print(row)

data_par[1][1] = 0
row_error,column_error = check_parity(data_par)

print("\n DETECTED ERROR!:")
print("ROW ERROR:",row_error)
print("COLUMN ERROR:",column_error)
